Compilation Results:
********************
maze.c: In function ‘createMaze’:
maze.c:13:28: warning: unused parameter ‘fileName’ [-Wunused-parameter]
 maze_t * createMaze(char * fileName)
                            ^
maze.c: In function ‘destroyMaze’:
maze.c:26:27: warning: unused parameter ‘maze’ [-Wunused-parameter]
 void destroyMaze(maze_t * maze)
                           ^
maze.c: In function ‘printMaze’:
maze.c:40:25: warning: unused parameter ‘maze’ [-Wunused-parameter]
 void printMaze(maze_t * maze)
                         ^
maze.c: In function ‘solveMazeDFS’:
maze.c:54:27: warning: unused parameter ‘maze’ [-Wunused-parameter]
 int solveMazeDFS(maze_t * maze, int col, int row)
                           ^
maze.c:54:37: warning: unused parameter ‘col’ [-Wunused-parameter]
 int solveMazeDFS(maze_t * maze, int col, int row)
                                     ^
maze.c:54:46: warning: unused parameter ‘row’ [-Wunused-parameter]
 int solveMazeDFS(maze_t * maze, int col, int row)
                                              ^

Testing createMaze (20 pts)

Testing destroyMaze (10 pts)
destroyMaze score: 10 points if no memory leaks/errors otherwise 0
==48124== Memcheck, a memory error detector
==48124== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==48124== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==48124== Command: ./grader 1
==48124== 
==48124== 
==48124== HEAP SUMMARY:
==48124==     in use at exit: 3,041 bytes in 53 blocks
==48124==   total heap usage: 54 allocs, 1 frees, 3,609 bytes allocated
==48124== 
==48124== LEAK SUMMARY:
==48124==    definitely lost: 32 bytes in 1 blocks
==48124==    indirectly lost: 3,009 bytes in 52 blocks
==48124==      possibly lost: 0 bytes in 0 blocks
==48124==    still reachable: 0 bytes in 0 blocks
==48124==         suppressed: 0 bytes in 0 blocks
==48124== Rerun with --leak-check=full to see details of leaked memory
==48124== 
==48124== For lists of detected and suppressed errors, rerun with: -s
==48124== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Testing printMaze 
PrintMazeScore: 0

0
Failed the nightly test.
This nightly test is focusing on compilation error not functionality test.
This nightly report only tests on the released testcases.
There are many hidden edge testcase for the MP. Please test it yourselve.
HIGHLY RECOMMEND YOU TO START YOUR MP EARLY!!!!!!!
Timestamp: 2022-04-08_00:22:02
